[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Аналіз автомобільного ринку України",
    "section": "",
    "text": "Про курс"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "1  Розвідувальний аналіз даних",
    "section": "",
    "text": "import pandas as pd\n\nОпис змінних:\n\nBrand – марка автомобіля;\nModel – модель автомобіля;\nYear – рік випуску автомобіля;\nPrice – ціна автомобіля (дол.);\nMileage – пробіг автомобіля (тис. км.);\nLocation – фізичне місце розташування автомобіля (включає в себе міста, села, поселення міського типу);\nRegion - регіон розташування автомобіля;\nFuel type – тип палива автомобіля;\nEngine volume – об‘єм двигуна автомобіля (л.);\nGearbox type – тип коробки передач автомобіля;\nWheel drive – тип приводу автомобіля;\nAccident – ДТП (потрапляв автомобіль в ДТП чи ні);\nVIN-code – VIN-code (перевірений VIN-code чи ні);\nDesc – опис оголошення.\n\n\ndf = pd.read_excel('00_data/ukr_cars.xlsx')\ndf\n\n\n\n\n\n  \n    \n      \n      Price\n      FullName\n      Brand\n      Model\n      Year\n      Mileage\n      Location\n      Region\n      FuelType\n      EngineVolume\n      GearboxType\n      WheelDrive\n      Accident\n      VIN-code\n      Desc\n    \n  \n  \n    \n      0\n      16950\n      BMW X5  2012\n      BMW\n      X5\n      2012\n      155\n      Чернівці\n      Чернівецька область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      Авто з Америкі  .В гарному стані. Перший власн...\n    \n    \n      1\n      17500\n      BMW X5  2012\n      BMW\n      X5\n      2012\n      219\n      Черкаси\n      Черкаська область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      2013 рік Авто у відмінному стані\\nу рідній фар...\n    \n    \n      2\n      28900\n      Audi A4  2017\n      Audi\n      A4\n      2017\n      77\n      Одеса\n      Одеська область\n      Бензин\n      2.0\n      Автомат\n      Повний\n      Так\n      Так\n      Хороша машина шукає свого нового господаря! Ві...\n    \n    \n      3\n      29900\n      BMW X5  2014\n      BMW\n      X5\n      2014\n      147\n      Рівне\n      Рівненська область\n      Дизель\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      ТЕРМІНОВИЙ ПРОДАЖ!\\n\\nBMW X5 35D 2014р. з ориг...\n    \n    \n      4\n      39000\n      Audi Q7  2016\n      Audi\n      Q7\n      2016\n      101\n      Дніпро\n      Дніпропетровська область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      Дуже надійне авто, хороша комплектація, 7 місц...\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      42576\n      600\n      ГАЗ 2410  1986\n      ГАЗ\n      2410\n      1986\n      46\n      Олевськ\n      Житомирська область\n      Бензин\n      2.5\n      Ручна / Механіка\n      Задній\n      Ні\n      Так\n      Продам авто на впевненому ходу, до коробки , д...\n    \n    \n      42577\n      55800\n      BMW M6  2013\n      BMW\n      M6\n      2013\n      147\n      Хуст\n      Закарпатська область\n      Бензин\n      4.4\n      Автомат\n      Задній\n      Ні\n      Так\n      Автомобіль приганявся для себе з Німеччини. Ро...\n    \n    \n      42578\n      650\n      ГАЗ 24  1976\n      ГАЗ\n      24\n      1976\n      140\n      Мукачево\n      Закарпатська область\n      Бензин\n      2.4\n      Ручна / Механіка\n      Задній\n      Ні\n      Так\n      Всі питаня по телефону\n    \n    \n      42579\n      5999\n      BMW 116  2006\n      BMW\n      116\n      2006\n      137\n      Луцьк\n      Волинська область\n      Бензин\n      1.6\n      Ручна / Механіка\n      Задній\n      Ні\n      Так\n      цікавить обмін на позашляховик\n    \n    \n      42580\n      450\n      ВАЗ 2101  1988\n      ВАЗ\n      2101\n      1988\n      320\n      Жидачів\n      Львівська область\n      Бензин\n      1.5\n      Ручна / Механіка\n      Задній\n      Ні\n      Так\n      авто в чудовому стані робити нічого непотрібно...\n    \n  \n\n42581 rows × 15 columns"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Висновки",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "eda.html#імпорт-бібліотек",
    "href": "eda.html#імпорт-бібліотек",
    "title": "1  Розвідувальний аналіз даних",
    "section": "1.1 Імпорт бібліотек",
    "text": "1.1 Імпорт бібліотек\n\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom plotnine import *\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")"
  },
  {
    "objectID": "eda.html#вхідні-дані",
    "href": "eda.html#вхідні-дані",
    "title": "1  Розвідувальний аналіз даних",
    "section": "1.2 Вхідні дані",
    "text": "1.2 Вхідні дані\nУ роботі використаний набір даних, отриманий за допомогою парсингу маркетплейсу Autoria за 10 вересня 2022 року: https://auto.ria.com/uk. Даний сайт працює як віртуальний торговельний майданчик із загальнодоступними оголошеннями про продаж автомобілів разом з інформацією про їх характеристики.\nОпис змінних:\n\nBrand – марка автомобіля;\nModel – модель автомобіля;\nYear – рік випуску автомобіля;\nPrice – ціна автомобіля (дол.);\nMileage – пробіг автомобіля (тис. км.);\nLocation – фізичне місце розташування автомобіля (включає в себе міста, села, поселення міського типу);\nRegion - регіон розташування автомобіля;\nFuel type – тип палива автомобіля;\nEngine volume – об‘єм двигуна автомобіля (л.);\nGearbox type – тип коробки передач автомобіля;\nWheel drive – тип приводу автомобіля;\nAccident – ДТП (потрапляв автомобіль в ДТП чи ні);\nVIN-code – VIN-code (перевірений VIN-code чи ні);\nDesc – опис оголошення.\n\n\ndf = pd.read_excel('00_data/ukr_cars.xlsx')\ndf.head()\n\n\n\n\nВхідні дані\n  \n    \n      \n      Price\n      FullName\n      Brand\n      Model\n      Year\n      Mileage\n      Location\n      Region\n      FuelType\n      EngineVolume\n      GearboxType\n      WheelDrive\n      Accident\n      VIN-code\n      Desc\n    \n  \n  \n    \n      0\n      16950\n      BMW X5  2012\n      BMW\n      X5\n      2012\n      155\n      Чернівці\n      Чернівецька область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      Авто з Америкі  .В гарному стані. Перший власн...\n    \n    \n      1\n      17500\n      BMW X5  2012\n      BMW\n      X5\n      2012\n      219\n      Черкаси\n      Черкаська область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      2013 рік Авто у відмінному стані\\nу рідній фар...\n    \n    \n      2\n      28900\n      Audi A4  2017\n      Audi\n      A4\n      2017\n      77\n      Одеса\n      Одеська область\n      Бензин\n      2.0\n      Автомат\n      Повний\n      Так\n      Так\n      Хороша машина шукає свого нового господаря! Ві...\n    \n    \n      3\n      29900\n      BMW X5  2014\n      BMW\n      X5\n      2014\n      147\n      Рівне\n      Рівненська область\n      Дизель\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      ТЕРМІНОВИЙ ПРОДАЖ!\\n\\nBMW X5 35D 2014р. з ориг...\n    \n    \n      4\n      39000\n      Audi Q7  2016\n      Audi\n      Q7\n      2016\n      101\n      Дніпро\n      Дніпропетровська область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      Дуже надійне авто, хороша комплектація, 7 місц...\n    \n  \n\n\n\n\n\ndf.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 42581 entries, 0 to 42580\nData columns (total 15 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   Price         42581 non-null  int64  \n 1   FullName      42581 non-null  object \n 2   Brand         42581 non-null  object \n 3   Model         42581 non-null  object \n 4   Year          42581 non-null  int64  \n 5   Mileage       42581 non-null  int64  \n 6   Location      42581 non-null  object \n 7   Region        42581 non-null  object \n 8   FuelType      42581 non-null  object \n 9   EngineVolume  42581 non-null  float64\n 10  GearboxType   42581 non-null  object \n 11  WheelDrive    42581 non-null  object \n 12  Accident      42581 non-null  object \n 13  VIN-code      42581 non-null  object \n 14  Desc          42581 non-null  object \ndtypes: float64(1), int64(3), object(11)\nmemory usage: 4.9+ MB\n\n\n\ndf.describe()\n\n\n\n\n\n  \n    \n      \n      Price\n      Year\n      Mileage\n      EngineVolume\n    \n  \n  \n    \n      count\n      4.258100e+04\n      42581.000000\n      42581.000000\n      42581.000000\n    \n    \n      mean\n      1.712289e+04\n      2010.433034\n      174.029826\n      2.295422\n    \n    \n      std\n      2.207514e+04\n      7.471509\n      106.968546\n      0.987495\n    \n    \n      min\n      1.500000e+02\n      1936.000000\n      0.000000\n      0.000000\n    \n    \n      25%\n      7.000000e+03\n      2007.000000\n      95.000000\n      1.800000\n    \n    \n      50%\n      1.160000e+04\n      2012.000000\n      171.000000\n      2.000000\n    \n    \n      75%\n      1.899900e+04\n      2016.000000\n      238.000000\n      2.900000\n    \n    \n      max\n      1.004831e+06\n      2023.000000\n      999.000000\n      7.000000\n    \n  \n\n\n\n\n\ndf.isna().sum()\n\nPrice           0\nFullName        0\nBrand           0\nModel           0\nYear            0\nMileage         0\nLocation        0\nRegion          0\nFuelType        0\nEngineVolume    0\nGearboxType     0\nWheelDrive      0\nAccident        0\nVIN-code        0\nDesc            0\ndtype: int64\n\n\n\ndf['Age'] = datetime.date.today().year - df['Year']\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Price\n      FullName\n      Brand\n      Model\n      Year\n      Mileage\n      Location\n      Region\n      FuelType\n      EngineVolume\n      GearboxType\n      WheelDrive\n      Accident\n      VIN-code\n      Desc\n      Age\n    \n  \n  \n    \n      0\n      16950\n      BMW X5  2012\n      BMW\n      X5\n      2012\n      155\n      Чернівці\n      Чернівецька область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      Авто з Америкі  .В гарному стані. Перший власн...\n      11\n    \n    \n      1\n      17500\n      BMW X5  2012\n      BMW\n      X5\n      2012\n      219\n      Черкаси\n      Черкаська область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      2013 рік Авто у відмінному стані\\nу рідній фар...\n      11\n    \n    \n      2\n      28900\n      Audi A4  2017\n      Audi\n      A4\n      2017\n      77\n      Одеса\n      Одеська область\n      Бензин\n      2.0\n      Автомат\n      Повний\n      Так\n      Так\n      Хороша машина шукає свого нового господаря! Ві...\n      6\n    \n    \n      3\n      29900\n      BMW X5  2014\n      BMW\n      X5\n      2014\n      147\n      Рівне\n      Рівненська область\n      Дизель\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      ТЕРМІНОВИЙ ПРОДАЖ!\\n\\nBMW X5 35D 2014р. з ориг...\n      9\n    \n    \n      4\n      39000\n      Audi Q7  2016\n      Audi\n      Q7\n      2016\n      101\n      Дніпро\n      Дніпропетровська область\n      Бензин\n      3.0\n      Автомат\n      Повний\n      Так\n      Так\n      Дуже надійне авто, хороша комплектація, 7 місц...\n      7\n    \n  \n\n\n\n\n\ndf[\"Brand\"].nunique()\n\n118\n\n\n\ndf['Brand'].value_counts().head()\n\nVolkswagen       4371\nBMW              4333\nMercedes-Benz    3863\nAudi             2685\nToyota           2463\nName: Brand, dtype: int64\n\n\n\n# ax = sns.countplot(\n#     y='Brand',\n#     data=df,\n#     order=df.Brand.value_counts().iloc[:25].index\n#     )\n# ax.set_xlabel(\"Кількість\")\n# ax.set_ylabel(\"\")\n# plt.show()\n\ndf_counts = df[\"Brand\"].value_counts().iloc[:25].reset_index()\ndf_counts.columns = [\"Brand\", \"count\"]\n\nfig = px.bar(df_counts, y=\"Brand\", x=\"count\", orientation=\"h\")\nfig.update_layout(yaxis={'categoryorder':'total ascending'})\n\nfig.update_layout(xaxis_title=\"Кількість\", yaxis_title=\"\", plot_bgcolor='rgba(0,0,0,0)')\nfig.show()\n\n\n                                                \nМарки автомобілів, які зустрічаються найчастіше\n\n\n\n# ax = sns.countplot(\n#     y='Brand',\n#     data=df,\n#     order=df.Brand.value_counts().iloc[:-50:-1].index\n#     )\n# ax.set_xlabel(\"Кількість\")\n# ax.set_ylabel(\"\")\n# plt.show()\n\ndf_counts = df[\"Brand\"].value_counts().iloc[:-50:-1].reset_index()\ndf_counts.columns = [\"Brand\", \"count\"]\n\nfig = px.bar(df_counts, y=\"Brand\", x=\"count\", orientation=\"h\")\n\nfig.update_layout(xaxis_title=\"Кількість\", yaxis_title=\"\", plot_bgcolor='rgba(0,0,0,0)')\nfig.show()\n\n\n                                                \nМарки автомобілів, які зустрічаються найрідше\n\n\n\ndef get_top_models(df, brand, top_n=5):\n    # Відфільтровуємо за брендом\n    df_brand = df[df[\"Brand\"] == brand]\n    \n    # Згрупуємо за моделлю та порахуємо кількість\n    model_counts = df_brand.groupby(by=[\"Model\"]).size().reset_index(name=\"Count\")\n\n    # Відсортуємо та обмежимо результат до top_n найпопулярніших моделей\n    top_models = model_counts.nlargest(top_n, \"Count\")\n    \n    return top_models\n\n\ntop5_vw_models = get_top_models(df, \"Volkswagen\")\ntop5_bmw_models = get_top_models(df, \"BMW\")\ntop5_mers_models = get_top_models(df, \"Mercedes-Benz\")\n\n\nvolk = sns.catplot(y='Model', x='Count', data=top5_vw_models, kind='bar',\npalette='PRGn', alpha=0.5, legend=False)\nvolk.set(xlabel='Кількість', ylabel='Модель автомобіля', title='Volkswagen')\nvolk.fig.suptitle(\"\")\n\nbmw = sns.catplot(y='Model', x='Count', data=top5_bmw_models, kind='bar',\npalette='Spectral', alpha=0.5, legend=False)\nbmw.set(xlabel='Кількість', ylabel='Модель автомобіля', title='BMW')\nbmw.fig.suptitle(\"\")\n\nmb = sns.catplot(y='Model', x='Count', data=top5_mers_models, kind='bar',\npalette='BrBG', alpha=0.5, legend=False)\nmb.set(xlabel='Кількість', ylabel='Модель автомобіля', title='Mercedes-Benz')\nmb.fig.suptitle(\"\")\nplt.show()\n\n\n\n\n\n\nVolkswagen\n\n\n\n\n\n\n\nBMW\n\n\n\n\n\n\n\nMercedes-Benz\n\n\n\n\n\n\n\nuaRegionsGrid = pd.DataFrame({\n'row': [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5],\n'col': [2, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 2, 5, 6, 7, 4, 6, 5],\n'code': list(range(1, 28)),\n'name': [\"Волинська область\", \"Київ\", \"Чернігівська область\", \"Сумська область\", \"Львівська область\", \"Тернопільська область\", \"Рівненська область\", \"Житомирська область\", \"Київська область\", \"Полтавська область\", \"Харківська область\", \"Луганська область\", \"Закарпатська область\", \"Івано-Франківська область\", \"Хмельницька область\", \"Вінницька область\", \"Черкаська область\", \"Кіровоградська область\", \"Дніпропетровська область\", \"Донецька область\", \"Чернівецька область\", \"Миколаївська область\", \"Херсонська область\", \"Запорізька область\", \"Одеська область\", \"АР Крим\", \"м. Севастополь\"]\n})\nuaRegionsGrid\n\n\n\n\n\n  \n    \n      \n      row\n      col\n      code\n      name\n    \n  \n  \n    \n      0\n      1\n      2\n      1\n      Волинська область\n    \n    \n      1\n      1\n      5\n      2\n      Київ\n    \n    \n      2\n      1\n      6\n      3\n      Чернігівська область\n    \n    \n      3\n      1\n      7\n      4\n      Сумська область\n    \n    \n      4\n      2\n      1\n      5\n      Львівська область\n    \n    \n      5\n      2\n      2\n      6\n      Тернопільська область\n    \n    \n      6\n      2\n      3\n      7\n      Рівненська область\n    \n    \n      7\n      2\n      4\n      8\n      Житомирська область\n    \n    \n      8\n      2\n      5\n      9\n      Київська область\n    \n    \n      9\n      2\n      6\n      10\n      Полтавська область\n    \n    \n      10\n      2\n      7\n      11\n      Харківська область\n    \n    \n      11\n      2\n      8\n      12\n      Луганська область\n    \n    \n      12\n      3\n      1\n      13\n      Закарпатська область\n    \n    \n      13\n      3\n      2\n      14\n      Івано-Франківська область\n    \n    \n      14\n      3\n      3\n      15\n      Хмельницька область\n    \n    \n      15\n      3\n      4\n      16\n      Вінницька область\n    \n    \n      16\n      3\n      5\n      17\n      Черкаська область\n    \n    \n      17\n      3\n      6\n      18\n      Кіровоградська область\n    \n    \n      18\n      3\n      7\n      19\n      Дніпропетровська область\n    \n    \n      19\n      3\n      8\n      20\n      Донецька область\n    \n    \n      20\n      4\n      2\n      21\n      Чернівецька область\n    \n    \n      21\n      4\n      5\n      22\n      Миколаївська область\n    \n    \n      22\n      4\n      6\n      23\n      Херсонська область\n    \n    \n      23\n      4\n      7\n      24\n      Запорізька область\n    \n    \n      24\n      4\n      4\n      25\n      Одеська область\n    \n    \n      25\n      5\n      6\n      26\n      АР Крим\n    \n    \n      26\n      5\n      5\n      27\n      м. Севастополь\n    \n  \n\n\n\n\n\ndata_region_quantity = df.groupby('Region').size().reset_index(name='Count')\ndata_region_quantity['Percent'] = (data_region_quantity['Count'] / data_region_quantity['Count'].sum()) * 100\ndata_region_quantity\n\n\n\n\n\n  \n    \n      \n      Region\n      Count\n      Percent\n    \n  \n  \n    \n      0\n      Івано-Франківська область\n      2051\n      4.816702\n    \n    \n      1\n      Волинська область\n      1483\n      3.482774\n    \n    \n      2\n      Вінницька область\n      1833\n      4.304737\n    \n    \n      3\n      Дніпропетровська область\n      3092\n      7.261455\n    \n    \n      4\n      Донецька область\n      107\n      0.251286\n    \n    \n      5\n      Житомирська область\n      1083\n      2.543388\n    \n    \n      6\n      Закарпатська область\n      1241\n      2.914445\n    \n    \n      7\n      Запорізька область\n      1051\n      2.468237\n    \n    \n      8\n      Київ\n      9288\n      21.812546\n    \n    \n      9\n      Київська область\n      1515\n      3.557925\n    \n    \n      10\n      Кіровоградська область\n      623\n      1.463094\n    \n    \n      11\n      Луганська область\n      103\n      0.241892\n    \n    \n      12\n      Львівська область\n      4663\n      10.950894\n    \n    \n      13\n      Миколаївська область\n      120\n      0.281816\n    \n    \n      14\n      Одеська область\n      3477\n      8.165614\n    \n    \n      15\n      Полтавська область\n      1317\n      3.092929\n    \n    \n      16\n      Рівненська область\n      1530\n      3.593152\n    \n    \n      17\n      Сумська область\n      692\n      1.625138\n    \n    \n      18\n      Тернопільська область\n      1410\n      3.311336\n    \n    \n      19\n      Харківська область\n      1242\n      2.916794\n    \n    \n      20\n      Херсонська область\n      73\n      0.171438\n    \n    \n      21\n      Хмельницька область\n      1503\n      3.529743\n    \n    \n      22\n      Черкаська область\n      1099\n      2.580963\n    \n    \n      23\n      Чернівецька область\n      1312\n      3.081186\n    \n    \n      24\n      Чернігівська область\n      673\n      1.580517\n    \n  \n\n\n\n\n\nuaCarsQuantity = uaRegionsGrid.merge(data_region_quantity, left_on='name', right_on='Region', how='left')\n\nuaCarsQuantity\n\n\n\n\n\n  \n    \n      \n      row\n      col\n      code\n      name\n      Region\n      Count\n      Percent\n    \n  \n  \n    \n      0\n      1\n      2\n      1\n      Волинська область\n      Волинська область\n      1483.0\n      3.482774\n    \n    \n      1\n      1\n      5\n      2\n      Київ\n      Київ\n      9288.0\n      21.812546\n    \n    \n      2\n      1\n      6\n      3\n      Чернігівська область\n      Чернігівська область\n      673.0\n      1.580517\n    \n    \n      3\n      1\n      7\n      4\n      Сумська область\n      Сумська область\n      692.0\n      1.625138\n    \n    \n      4\n      2\n      1\n      5\n      Львівська область\n      Львівська область\n      4663.0\n      10.950894\n    \n    \n      5\n      2\n      2\n      6\n      Тернопільська область\n      Тернопільська область\n      1410.0\n      3.311336\n    \n    \n      6\n      2\n      3\n      7\n      Рівненська область\n      Рівненська область\n      1530.0\n      3.593152\n    \n    \n      7\n      2\n      4\n      8\n      Житомирська область\n      Житомирська область\n      1083.0\n      2.543388\n    \n    \n      8\n      2\n      5\n      9\n      Київська область\n      Київська область\n      1515.0\n      3.557925\n    \n    \n      9\n      2\n      6\n      10\n      Полтавська область\n      Полтавська область\n      1317.0\n      3.092929\n    \n    \n      10\n      2\n      7\n      11\n      Харківська область\n      Харківська область\n      1242.0\n      2.916794\n    \n    \n      11\n      2\n      8\n      12\n      Луганська область\n      Луганська область\n      103.0\n      0.241892\n    \n    \n      12\n      3\n      1\n      13\n      Закарпатська область\n      Закарпатська область\n      1241.0\n      2.914445\n    \n    \n      13\n      3\n      2\n      14\n      Івано-Франківська область\n      Івано-Франківська область\n      2051.0\n      4.816702\n    \n    \n      14\n      3\n      3\n      15\n      Хмельницька область\n      Хмельницька область\n      1503.0\n      3.529743\n    \n    \n      15\n      3\n      4\n      16\n      Вінницька область\n      Вінницька область\n      1833.0\n      4.304737\n    \n    \n      16\n      3\n      5\n      17\n      Черкаська область\n      Черкаська область\n      1099.0\n      2.580963\n    \n    \n      17\n      3\n      6\n      18\n      Кіровоградська область\n      Кіровоградська область\n      623.0\n      1.463094\n    \n    \n      18\n      3\n      7\n      19\n      Дніпропетровська область\n      Дніпропетровська область\n      3092.0\n      7.261455\n    \n    \n      19\n      3\n      8\n      20\n      Донецька область\n      Донецька область\n      107.0\n      0.251286\n    \n    \n      20\n      4\n      2\n      21\n      Чернівецька область\n      Чернівецька область\n      1312.0\n      3.081186\n    \n    \n      21\n      4\n      5\n      22\n      Миколаївська область\n      Миколаївська область\n      120.0\n      0.281816\n    \n    \n      22\n      4\n      6\n      23\n      Херсонська область\n      Херсонська область\n      73.0\n      0.171438\n    \n    \n      23\n      4\n      7\n      24\n      Запорізька область\n      Запорізька область\n      1051.0\n      2.468237\n    \n    \n      24\n      4\n      4\n      25\n      Одеська область\n      Одеська область\n      3477.0\n      8.165614\n    \n    \n      25\n      5\n      6\n      26\n      АР Крим\n      NaN\n      NaN\n      NaN\n    \n    \n      26\n      5\n      5\n      27\n      м. Севастополь\n      NaN\n      NaN\n      NaN\n    \n  \n\n\n\n\n\nuaCarsQuantity['Region'] = uaCarsQuantity['Region'].str.replace(' область', '')\n\n\ndata = np.asarray(uaCarsQuantity.pivot(\"row\", \"col\", \"Percent\"))\ntext = np.asarray(uaCarsQuantity.pivot(\"row\", \"col\", \"Region\"))\nlabels = (np.asarray([\"{0}\\n{1:.2f}\".format(text,data) for text, data in zip(text.flatten(), data.flatten())])).reshape(5,8)\n\nsns.set_theme(style='white', font_scale=0.6)\nf, ax = plt.subplots(figsize=(9, 6))\nsns.heatmap(data,\n    annot=labels,\n    linewidths=.5,\n    fmt='',\n    ax=ax,\n    yticklabels=False,\n    xticklabels=False,\n    cbar=False)\nplt.show()\n\n\n\n\nВідсоток автомобілів в регіонах України"
  }
]